{"version":3,"sources":["components/ToDoInputForm.js","actions/ToDoInputAction.js","actions/ViewController.js","components/ToDoItems.js","components/AllToDoItems.js","components/ToDoItemsList.js","App.js","reportWebVitals.js","reducers/StateViewReducer.js","reducers/ToDoInputReducer.js","reducers/index.js","index.js"],"names":["StyledInputForm","styled","div","ToDoInputForm","stateview","useSelector","state","title","dispatch","useDispatch","className","onChange","e","preventDefault","target","value","console","log","type","id","onClick","payload","isdone","uuid","Itembox","ToDoItems","style","textDecoration","data","AllToDoItems","ToDoItemsList","todos","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StateViewReducer","action","todoinputreducer","todoslist","finaltodolist","filter","todo","forEach","a","allReducers","combineReducers","ToDoInputReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eb5782b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToDo } from \"../actions/ToDoInputAction\";\r\nimport { uuid } from \"uuidv4\";\r\nimport { homeToDo } from \"../actions/ViewController\";\r\nimport { allToDo } from \"../actions/ViewController\";\r\nimport { remainingToDo } from \"../actions/ViewController\";\r\n\r\nconst ToDoInputForm = () => {\r\n  const stateview = useSelector((state) => state.stateview);\r\n  let title = \"\";\r\n  const inputHandler = (e) => {\r\n    e.preventDefault();\r\n    title = e.target.value;\r\n    console.log(title);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const allClickHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(allToDo());\r\n  };\r\n  const remainingHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(remainingToDo());\r\n  };\r\n  const homeHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(homeToDo());\r\n  };\r\n  return (\r\n    <StyledInputForm>\r\n      <div className=\"display\">\r\n        <input onChange={inputHandler} type=\"text\" />\r\n\r\n        {stateview === \"home\" ? (\r\n          <button id=\"submitt\"\r\n            onClick={() => {\r\n              dispatch(addToDo({ title, isdone: false, id: uuid() }));\r\n            }}\r\n          >\r\n            Submitt\r\n          </button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={stateview === \"all\" ? homeHandler : allClickHandler}>\r\n          {stateview === \"all\" ? \"Home\" : \"All\"}\r\n        </button>\r\n        <button onClick={remainingHandler}>Remaining</button>\r\n      </div>\r\n    </StyledInputForm>\r\n  );\r\n};\r\n\r\nconst StyledInputForm = styled.div`\r\n  /* border: 2px solid red; */\r\n  height: 20vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n\r\n  .display {\r\n    /* border: 2px solid green; */\r\n    /* height:100%; */\r\n    width:100%;\r\n    display:flex;\r\n    /* flex-direction:column; */\r\n    align-content:center;\r\n    justify-content:center;\r\n  }\r\n  input{\r\n    border: 2px solid grey;\r\n    height:41px;\r\n    width:38%;\r\n    border-radius:18px;\r\n    text-align:center;\r\n  }\r\n  #submitt{\r\n    /* border:2px solid red; */\r\n    width:11%;\r\n    padding:0;\r\n    margin:0;\r\n    vertical-align:middle;\r\n  }\r\n  button{\r\n    height:37px;\r\n    width:120px;\r\n    border:none;\r\n    border-radius:25px;\r\n    background-color:grey;\r\n    color:white;\r\n    margin:5px;\r\n  }\r\n  button:hover{\r\n    background-color:whitesmoke;\r\n    transition-duration:0.2s;\r\n    color:black;\r\n    cursor: pointer;\r\n    border:1px solid grey;\r\n  }\r\n  textarea:focus, input:focus{\r\n    outline: none;\r\n}\r\n\r\n@media only screen and (max-width:667px){\r\n  input{\r\n    width:70%;\r\n    border-radius:0px;\r\n  }\r\n  #submitt{\r\n    width:28%;\r\n    margin-left:1em;\r\n  }\r\n}\r\n`;\r\nexport default ToDoInputForm;\r\n","\r\nexport const addToDo=(data)=>{\r\n    return{\r\n        type:'add',\r\n        payload:data,\r\n    }\r\n}\r\n\r\nexport const deleteToDo=(data)=>{\r\n    console.log(data);\r\n    return{\r\n        type:\"delete\",\r\n        payload:data,\r\n    }\r\n}\r\nexport const isDoneToDo=(data)=>{\r\n    return{\r\n        type:\"isdone\",\r\n        payload:data,\r\n    }\r\n}\r\n","\r\nexport const allToDo=()=>{\r\n    return{\r\n        type:\"all\",\r\n        \r\n    }\r\n}\r\nexport const remainingToDo=()=>{\r\n    return{\r\n        type:\"remaining\",\r\n        \r\n    }\r\n}\r\nexport const homeToDo=()=>{\r\n    return{\r\n        type:\"home\",\r\n    }\r\n}","import styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteToDo } from \"../actions/ToDoInputAction\";\r\nimport {isDoneToDo} from \"../actions/ToDoInputAction\";\r\nconst ToDoItems = ({ title, id, isdone }) => {\r\n  const dispatch = useDispatch();\r\n  const onDelete = (e) => {\r\n    e.preventDefault();\r\n    dispatch(deleteToDo({ id }));\r\n  };\r\n  const onDone=(e)=>{\r\n    e.preventDefault();\r\n    dispatch(isDoneToDo({id}));\r\n  }\r\n  return (\r\n    <Itembox>\r\n      {isdone?\r\n      <div style={{textDecoration:\"line-through\"}} className=\"item\">\r\n        {title}\r\n      </div>:\r\n      <div  className=\"item\">\r\n      {title}\r\n    </div>\r\n}\r\n      <button id=\"delete\" onClick={onDelete}>Delete</button>\r\n      <button onClick={onDone}>Done</button>\r\n\r\n      {/* <a href=\"https://facebook.com\">facebook</a> */}\r\n    </Itembox>\r\n  );\r\n};\r\nconst Itembox = styled.div`\r\n  /* margin-top:50px; */\r\n  /* border: 2px solid orange; */\r\n  text-align: center;\r\n  background-color:wheat;\r\n  width:65%;\r\n  /* border-radius:18px; */\r\n  margin:0 auto;\r\n  margin-bottom:10px;\r\n  /* justify-content:center; */\r\n\r\n  .item {\r\n    display: inline-block;\r\n    /* border: 1px solid whitesmoke; */\r\n    border-radius:14px;\r\n    width: 55%;\r\n    height: 40px;\r\n    color:black;\r\n    /* text-decoration: line-through; */\r\n  }\r\n  button {\r\n    height: 35px;\r\n    width: 13%;\r\n    /* border-radius:25px; */\r\n    margin-left: 10px;\r\n    vertical-align:middle;\r\n    margin-top:7px;\r\n    border:none;\r\n    background-color:rgba(0,128,128,0.7);\r\n    opacity:0.7;\r\n    color:black;\r\n  }\r\n  button:hover{\r\n    cursor: pointer;\r\n    /* border:1px solid blue; */\r\n    background-color:ghostwhite;\r\n    transition-duration:0.3s;\r\n  }\r\n  #delete{\r\n    color:black;\r\n    background-color:#ffb686;\r\n  }\r\n\r\n  @media only screen and (max-width:667px){\r\n    width:100%;\r\n     .item{\r\n       width:60%;\r\n       /* border:solid; */\r\n       text-overflow:ellipsis;\r\n     }\r\n     \r\n     button{\r\n       /* width:20%; */\r\n     }\r\n  }\r\n`;\r\n\r\nexport default ToDoItems;\r\n","import styled from \"styled-components\";\r\n\r\nconst AllToDoItems = ({ title, id, isdone }) => {\r\n \r\n\r\n  return (\r\n    <Itembox>\r\n      \r\n        <div className=\"item\">{title}</div>\r\n      \r\n      \r\n\r\n      {/* <a href=\"https://facebook.com\">facebook</a> */}\r\n    </Itembox>\r\n  );\r\n};\r\nconst Itembox = styled.div`\r\n  /* margin-top:50px; */\r\n  \r\n  text-align: center;\r\n  background-color:wheat;\r\n  width:65%;\r\n  margin:0 auto;\r\n  margin-bottom:2px;\r\n\r\n  .item {\r\n    display: inline-block;\r\n    color:black;\r\n    /* width: 500px; */\r\n    height: 40px;\r\n    /* border: 1px solid whitesmoke; */\r\n    border-radius:14px;\r\n    /* text-decoration: line-through; */\r\n  }\r\n  button {\r\n    height: 35px;\r\n    width: 70px;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  @media only screen and (max-width:767px){\r\n    width:100%;\r\n  }\r\n`;\r\n\r\nexport default AllToDoItems;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport ToDoItems from \"./ToDoItems\";\r\nimport AllToDoItems from \"../components/AllToDoItems\";\r\nconst ToDoItemsList = () => {\r\n  const todos = useSelector((state) => state.todos);\r\n  const stateview = useSelector((state) => state.stateview);\r\n  console.log(typeof stateview);\r\n  console.log(todos);\r\n\r\n  return (\r\n    <div className=\"todoitemslist\">\r\n      {stateview === \"home\"\r\n        ? todos.map((state) => {\r\n            return (\r\n              <ToDoItems\r\n                todos={todos}\r\n                title={state.title}\r\n                key={state.id}\r\n                id={state.id}\r\n                isdone={state.isdone}\r\n              />\r\n            );\r\n          })\r\n        : stateview === \"remaining\"\r\n        ? todos.map((state) => {\r\n          if(!(state.isdone))\r\n            return (\r\n              <AllToDoItems\r\n                todos={todos}\r\n                title={state.title}\r\n                key={state.id}\r\n                id={state.id}\r\n                isdone={state.isdone}\r\n              />\r\n            );\r\n            else{\r\n              return \"\";\r\n            }\r\n          })\r\n        : todos.map((state) => {\r\n            return (\r\n              <AllToDoItems\r\n                todos={todos}\r\n                title={state.title}\r\n                key={state.id}\r\n                id={state.id}\r\n                isdone={state.isdone}\r\n              />\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoItemsList;\r\n","\nimport \"./components/ToDoInputForm\"\nimport ToDoInputForm from './components/ToDoInputForm';\nimport ToDoItemsLists from \"./components/ToDoItemsList\";\nimport \"../src/styles/globalstyle.css\";\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ToDoInputForm/>\n     <ToDoItemsLists/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nconst StateViewReducer=(state=\"home\", action)=>{\r\n\r\n    switch(action.type){\r\n        case \"all\":{\r\n            return \"all\";\r\n        }\r\n        case \"remaining\":{\r\n            return \"remaining\";\r\n        }\r\n        case \"home\":{\r\n            return \"home\";\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default StateViewReducer;","const todoinputreducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\": {\r\n      const todoslist = [action.payload, ...state];\r\n      return todoslist;\r\n    }\r\n    case \"delete\": {\r\n      const todoslist = [...state];\r\n      const finaltodolist = todoslist.filter((todo) => {\r\n        return todo.id !== action.payload.id;\r\n      });\r\n      return finaltodolist;\r\n    }\r\n    case \"isdone\": {\r\n      const todoslist = [...state];\r\n      todoslist.forEach((todo) => {\r\n        if (todo.id === action.payload.id) {\r\n          let a = todo.isdone;\r\n          todo.isdone =! a;\r\n        }\r\n      });\r\n    return todoslist;\r\n    }\r\n    // case \"all\":{\r\n    //     const todoslist=[...state];\r\n    //     todoslist.forEach((todo)=>{\r\n    //         todo.isdone=false;\r\n    //     })\r\n    //     return todoslist;\r\n    // }\r\n    // case \"remaining\":{\r\n    //     const todoslist=[...state];\r\n    //     todoslist.filter((todo)=>{\r\n    //         return todo.isdone===true;\r\n    //     })\r\n    //     return todoslist;\r\n    // }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoinputreducer;\r\n","import StateViewReducer from \"./StateViewReducer\";\r\nimport ToDoInputReducer from \"./ToDoInputReducer\"\r\n\r\nimport {combineReducers} from \"redux\";\r\n\r\n\r\nconst allReducers=combineReducers({stateview:StateViewReducer, todos:ToDoInputReducer});\r\n\r\nexport default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n// import todoinputreducer from \"./reducers/ToDoInputReducer\";\nimport allReducers from \"./reducers/\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}